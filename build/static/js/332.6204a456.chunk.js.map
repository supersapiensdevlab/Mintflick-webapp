{"version":3,"file":"static/js/332.6204a456.chunk.js","mappings":"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","sources":["../node_modules/@web3auth/wallet-connect-v1-adapter/src/config.ts","../node_modules/@web3auth/wallet-connect-v1-adapter/src/walletConnectV1adapter.ts"],"sourcesContent":["import { CHAIN_NAMESPACES, IWalletConnectExtensionAdapter } from \"@web3auth/base\";\n\nexport const WALLET_CONNECT_EXTENSION_ADAPTERS: IWalletConnectExtensionAdapter[] = [\n  {\n    name: \"Rainbow\",\n    chains: [CHAIN_NAMESPACES.EIP155],\n    logo: \"https://images.web3auth.io/login-rainbow.svg\",\n    mobile: {\n      native: \"rainbow:\",\n      universal: \"https://rnbwapp.com\",\n    },\n    desktop: {\n      native: \"\",\n      universal: \"\",\n    },\n  },\n  {\n    name: \"MetaMask\",\n    chains: [CHAIN_NAMESPACES.EIP155],\n    logo: \"https://images.web3auth.io/login-metamask.svg\",\n    mobile: {\n      native: \"metamask:\",\n      universal: \"https://metamask.app.link\",\n    },\n    desktop: {\n      native: \"\",\n      universal: \"\",\n    },\n  },\n];\n","import WalletConnect from \"@walletconnect/client\";\nimport {\n  ADAPTER_CATEGORY,\n  ADAPTER_CATEGORY_TYPE,\n  ADAPTER_EVENTS,\n  ADAPTER_NAMESPACES,\n  ADAPTER_STATUS,\n  ADAPTER_STATUS_TYPE,\n  AdapterNamespaceType,\n  CHAIN_NAMESPACES,\n  ChainNamespaceType,\n  CONNECTED_EVENT_DATA,\n  CustomChainConfig,\n  getChainConfig,\n  log,\n  SafeEventEmitterProvider,\n  UserInfo,\n  WALLET_ADAPTERS,\n  WalletConnectV1Data,\n  WalletInitializationError,\n  WalletLoginError,\n  Web3AuthError,\n} from \"@web3auth/base\";\nimport { BaseEvmAdapter } from \"@web3auth/base-evm-adapter\";\nimport { WalletConnectProvider } from \"@web3auth/ethereum-provider\";\n\nimport { WALLET_CONNECT_EXTENSION_ADAPTERS } from \"./config\";\nimport { WalletConnectV1AdapterOptions } from \"./interface\";\n\nclass WalletConnectV1Adapter extends BaseEvmAdapter<void> {\n  readonly name: string = WALLET_ADAPTERS.WALLET_CONNECT_V1;\n\n  readonly adapterNamespace: AdapterNamespaceType = ADAPTER_NAMESPACES.EIP155;\n\n  readonly currentChainNamespace: ChainNamespaceType = CHAIN_NAMESPACES.EIP155;\n\n  readonly type: ADAPTER_CATEGORY_TYPE = ADAPTER_CATEGORY.EXTERNAL;\n\n  readonly adapterOptions: WalletConnectV1AdapterOptions;\n\n  public status: ADAPTER_STATUS_TYPE = ADAPTER_STATUS.NOT_READY;\n\n  public adapterData: WalletConnectV1Data = {\n    uri: \"\",\n    extensionAdapters: WALLET_CONNECT_EXTENSION_ADAPTERS,\n  };\n\n  public connector: WalletConnect | null = null;\n\n  private wcProvider: WalletConnectProvider | null = null;\n\n  private rehydrated = false;\n\n  constructor(options: WalletConnectV1AdapterOptions) {\n    super(options);\n    this.adapterOptions = { ...options };\n    this.chainConfig = options.chainConfig || null;\n    this.sessionTime = options.sessionTime || 86400;\n  }\n\n  get connected(): boolean {\n    return !!this.connector?.connected;\n  }\n\n  get provider(): SafeEventEmitterProvider | null {\n    return this.wcProvider?.provider || null;\n  }\n\n  set provider(_: SafeEventEmitterProvider | null) {\n    throw new Error(\"Not implemented\");\n  }\n\n  async init(): Promise<void> {\n    super.checkInitializationRequirements();\n    if (!this.chainConfig) {\n      this.chainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, 1);\n    }\n    // Create a connector\n    this.connector = this.getWalletConnectInstance();\n    this.wcProvider = new WalletConnectProvider({ config: { chainConfig: this.chainConfig as CustomChainConfig }, connector: this.connector });\n\n    this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.WALLET_CONNECT_V1);\n    this.status = ADAPTER_STATUS.READY;\n    log.debug(\"initializing wallet connect v1 adapter\");\n    if (this.connector.connected) {\n      this.rehydrated = true;\n      await this.onConnectHandler({ accounts: this.connector.accounts, chainId: this.connector.chainId });\n    }\n  }\n\n  async connect(): Promise<SafeEventEmitterProvider | null> {\n    super.checkConnectionRequirements();\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n\n    if (this.connected) {\n      await this.onConnectHandler({ accounts: this.connector.accounts, chainId: this.connector.chainId });\n      return this.provider;\n    }\n\n    if (this.status !== ADAPTER_STATUS.CONNECTING) {\n      // for wallet connect qr code modal we have to create a new connector, coz wallet connect internally does not open\n      // modal again on existing instance if connection is pending.\n      if (this.adapterOptions.adapterSettings?.qrcodeModal) {\n        this.connector = this.getWalletConnectInstance();\n        this.wcProvider = new WalletConnectProvider({\n          config: {\n            chainConfig: this.chainConfig as CustomChainConfig,\n            // network switching can be skipped with custom ui\n            skipLookupNetwork: this.adapterOptions.adapterSettings?.skipNetworkSwitching,\n          },\n          connector: this.connector,\n        });\n      }\n      await this.createNewSession();\n      this.status = ADAPTER_STATUS.CONNECTING;\n      this.emit(ADAPTER_EVENTS.CONNECTING, { adapter: WALLET_ADAPTERS.WALLET_CONNECT_V1 });\n    }\n    return new Promise((resolve, reject) => {\n      if (!this.connector) return reject(WalletInitializationError.notReady(\"Wallet adapter is not ready yet\"));\n      // for wallet connect default modal.\n      this.connector.on(\"modal_closed\", async () => {\n        this.status = ADAPTER_STATUS.READY;\n        this.emit(ADAPTER_EVENTS.READY, WALLET_ADAPTERS.WALLET_CONNECT_V1);\n        return reject(new Error(\"User closed modal\"));\n      });\n      try {\n        // Subscribe to session connection\n        this.connector.on(\"connect\", async (error: Error | null, payload: { params: { accounts: string[]; chainId: number }[] }) => {\n          if (error) {\n            this.emit(ADAPTER_EVENTS.ERRORED, error);\n          }\n          log.debug(\"connected event emitted by web3auth\");\n          await this.onConnectHandler(payload.params[0]);\n          return resolve(this.provider);\n        });\n      } catch (error: unknown) {\n        log.error(\"Wallet connect v1 adapter error while connecting\", error);\n        // ready again to be connected\n        this.status = ADAPTER_STATUS.READY;\n        this.rehydrated = true;\n        this.emit(ADAPTER_EVENTS.ERRORED, error);\n        reject(\n          error instanceof Web3AuthError\n            ? error\n            : WalletLoginError.connectionError(`Failed to login with wallet connect: ${(error as Error)?.message || \"\"}`)\n        );\n      }\n    });\n  }\n\n  setAdapterSettings(options: { sessionTime?: number; clientId?: string }): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (options?.sessionTime) {\n      this.sessionTime = options.sessionTime;\n    }\n    if (options?.clientId) {\n      this.clientId = options.clientId;\n    }\n  }\n\n  async getUserInfo(): Promise<Partial<UserInfo>> {\n    if (!this.connected) throw WalletLoginError.notConnectedError(\"Not connected with wallet, Please login/connect first\");\n    return {};\n  }\n\n  async disconnect(options: { cleanup: boolean } = { cleanup: false }): Promise<void> {\n    const { cleanup } = options;\n    if (!this.connector || !this.connected) throw WalletLoginError.notConnectedError(\"Not connected with wallet\");\n    await super.disconnect();\n    await this.connector.killSession();\n    this.rehydrated = false;\n    if (cleanup) {\n      this.connector = null;\n      this.status = ADAPTER_STATUS.NOT_READY;\n      this.wcProvider = null;\n    } else {\n      // ready to connect again\n      this.status = ADAPTER_STATUS.READY;\n    }\n    this.emit(ADAPTER_EVENTS.DISCONNECTED);\n  }\n\n  private async addChain(chainConfig: CustomChainConfig): Promise<void> {\n    try {\n      if (!this.wcProvider) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n      const networkSwitch = this.adapterOptions.adapterSettings?.networkSwitchModal;\n      if (networkSwitch) {\n        await networkSwitch.addNetwork({ chainConfig, appOrigin: window.location.hostname });\n      }\n      await this.wcProvider.addChain(chainConfig);\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  private async switchChain(connectedChainConfig: Partial<CustomChainConfig>, chainConfig: CustomChainConfig): Promise<void> {\n    if (!this.wcProvider) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    const networkSwitch = this.adapterOptions.adapterSettings?.networkSwitchModal;\n\n    if (networkSwitch) {\n      await networkSwitch.switchNetwork({\n        currentChainConfig: chainConfig,\n        newChainConfig: connectedChainConfig,\n        appOrigin: window.location.hostname,\n      });\n    }\n    await this.wcProvider.switchChain({ chainId: chainConfig.chainId, lookup: false, addChain: false });\n  }\n\n  private async createNewSession(opts: { forceNewSession: boolean } = { forceNewSession: false }): Promise<void> {\n    if (!this.connector) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    if (opts.forceNewSession && this.connector.pending) {\n      await this.connector.killSession();\n    }\n    // for wallet connect qr modal\n    if (this.adapterOptions?.adapterSettings?.qrcodeModal) {\n      await this.connector.createSession({ chainId: parseInt(this.chainConfig?.chainId || \"0x1\", 16) });\n      return;\n    }\n\n    // for web3auth qr code modal\n    return new Promise<void>((resolve, reject) => {\n      if (!this.connector) return reject(WalletInitializationError.notReady(\"Wallet adapter is not ready yet\"));\n      log.debug(\"creating new session for web3auth wallet connect\");\n      this.connector.on(\"display_uri\", async (err, payload) => {\n        if (err) {\n          this.emit(ADAPTER_EVENTS.ERRORED, WalletLoginError.connectionError(\"Failed to display wallet connect qr code\"));\n          return reject(err);\n        }\n        const uri = payload.params[0];\n        this.updateAdapterData({ uri, extensionAdapters: WALLET_CONNECT_EXTENSION_ADAPTERS } as WalletConnectV1Data);\n\n        this.connector?.off(\"display_uri\");\n        return resolve();\n      });\n\n      this.connector.createSession({ chainId: parseInt(this.chainConfig?.chainId || \"0x1\", 16) }).catch((error) => {\n        log.error(\"error while creating new wallet connect session\", error);\n        this.emit(ADAPTER_EVENTS.ERRORED, error);\n        return reject(error);\n      });\n    });\n  }\n\n  private async onConnectHandler(params: { accounts: string[]; chainId: number }) {\n    if (!this.connector || !this.wcProvider) throw WalletInitializationError.notReady(\"Wallet adapter is not ready yet\");\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"Chain config is not set\");\n\n    const { chainId } = params;\n    log.debug(\"connected chainId in hex\");\n    if (chainId !== parseInt(this.chainConfig.chainId, 16)) {\n      const connectedChainConfig = getChainConfig(CHAIN_NAMESPACES.EIP155, chainId) || {\n        chainId: `0x${chainId.toString(16)}`,\n        displayName: \"Unknown Network\",\n      };\n\n      const isCustomUi = this.adapterOptions.adapterSettings?.qrcodeModal;\n      // skipping network is not allowed in default ui. We are use network switching modal for default ui.\n      if (!isCustomUi || (isCustomUi && !this.adapterOptions?.adapterSettings?.skipNetworkSwitching)) {\n        try {\n          await this.addChain(this.chainConfig);\n          await this.switchChain(connectedChainConfig, this.chainConfig);\n          this.connector = this.getWalletConnectInstance();\n        } catch (error) {\n          log.error(\"error while chain switching\", error);\n          // we need to create a new session since old session is already used and\n          // user needs to login again with correct chain with new qr code.\n          await this.createNewSession({ forceNewSession: true });\n          this.emit(\n            ADAPTER_EVENTS.ERRORED,\n            WalletInitializationError.fromCode(\n              5000,\n              `Not connected to correct network. Expected: ${this.chainConfig.displayName}, Current: ${\n                connectedChainConfig?.displayName || chainId\n              }, Please switch to correct network from wallet`\n            )\n          );\n          this.status = ADAPTER_STATUS.READY;\n          this.rehydrated = true;\n          return;\n        }\n      }\n    }\n    await this.wcProvider.setupProvider(this.connector);\n    this.subscribeEvents(this.connector);\n    this.status = ADAPTER_STATUS.CONNECTED;\n    this.emit(ADAPTER_EVENTS.CONNECTED, { adapter: WALLET_ADAPTERS.WALLET_CONNECT_V1, reconnected: this.rehydrated } as CONNECTED_EVENT_DATA);\n  }\n\n  private subscribeEvents(connector: WalletConnect): void {\n    connector.on(\"session_update\", async (error: Error | null) => {\n      if (error) {\n        this.emit(ADAPTER_EVENTS.ERRORED, error);\n      }\n    });\n  }\n\n  private getWalletConnectInstance(): WalletConnect {\n    const walletConnectOptions = this.adapterOptions.adapterSettings || {};\n    walletConnectOptions.bridge = walletConnectOptions.bridge || \"https://bridge.walletconnect.org\";\n    // Create a connector\n    return new WalletConnect(walletConnectOptions);\n  }\n}\n\nexport { WalletConnectV1Adapter };\n"],"names":["WALLET_CONNECT_EXTENSION_ADAPTERS","name","chains","CHAIN_NAMESPACES","logo","mobile","native","universal","desktop","WalletConnectV1Adapter","_inherits","options","_classCallCheck","_this","_defineProperty","WALLET_ADAPTERS","ADAPTER_NAMESPACES","ADAPTER_CATEGORY","ADAPTER_STATUS","uri","extensionAdapters","adapterOptions","chainConfig","sessionTime","_createClass","key","get","this","connector","_this$connector","connected","wcProvider","_this$wcProvider","provider","set","_","Error","value","_init","_get","getChainConfig","getWalletConnectInstance","WalletConnectProvider","config","emit","ADAPTER_EVENTS","status","log","_context","rehydrated","onConnectHandler","accounts","chainId","_connect","_context4","WalletInitializationError","adapterSettings","qrcodeModal","skipLookupNetwork","_this$adapterOptions$2","skipNetworkSwitching","createNewSession","adapter","Promise","resolve","reject","_this2","on","_asyncToGenerator","_ref2","error","payload","_context3","params","Web3AuthError","WalletLoginError","message","clientId","_getUserInfo","_context5","_disconnect","cleanup","_args6","_context6","killSession","_context7","networkSwitch","_this$adapterOptions$3","networkSwitchModal","addNetwork","appOrigin","window","location","hostname","addChain","_switchChain","connectedChainConfig","_context8","_this$adapterOptions$4","switchNetwork","currentChainConfig","newChainConfig","switchChain","lookup","_createNewSession","_this$adapterOptions$5","_this$chainConfig","_this3","_args10","opts","forceNewSession","_context10","pending","_this$adapterOptions","createSession","parseInt","_ref3","err","_context9","updateAdapterData","_this3$connector","off","catch","_context11","toString","displayName","isCustomUi","_this$adapterOptions$6","_this$adapterOptions2","setupProvider","subscribeEvents","reconnected","_this4","walletConnectOptions","bridge","WalletConnect","BaseEvmAdapter"],"sourceRoot":""}